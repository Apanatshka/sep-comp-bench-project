module statics/variables

imports
  signatures/nabl2/shared/-
  signatures/nabl2/shared/common/-
  signatures/nabl2/shared/constraints/-
  nabl2/shared/-
  signatures/nabl2/runtime/-
  signatures/nabl2/runtime/analysis/-
  signatures/nabl2/runtime/common/-
  nabl2/runtime/-
  nabl2/runtime/analysis/-
  nabl2/runtime/prelude/-
  nabl2/runtime/stdlib/-


rules


rules


rules


imports
  signatures/-


imports
  statics/nabl-lib


imports
  statics/base


rules

  nabl2--generate-constraint-Dec-rule(|):
    ( nabl2_source
    , term87@VarDec(x, t, e)
    , args21
    ) -> constraint7
    with(ty2 := <nabl2--fresh-var(|nabl2_source)> "ty2"
         ; ty1 := <nabl2--fresh-var(|nabl2_source)> "ty1"
         ; id)
    with(Params(params14@(s, s_outer)) := args21
         <+ fatal-err(
            | <concat-strings> [ "Cannot match expected "
                               , "^ (s, s_outer)"
                               , " with actual "
                               , <nabl2--pp-flat-args> args21
                               , " when matching "
                               , "VarDec(x, t, e)"
                               , " with "
                               , <pp-NaBL2-Term> term87
                               , "."
                               ]
            ))
    with(if nabl2--is-debug-collection-enabled then
           nabl2--collection-info-msg(
           | <concat-strings> [ "Dec"
                              , " [[ "
                              , <pp-NaBL2-Term> term87
                              , " ^ "
                              , <pp-NaBL2-CTerm> params14
                              , " ]]"
                              ]
           )
         end)
    with(constraint7 := CConj(
                          CAstProperty(
                            <nabl2--get-ast-index> term87
                          , Params()
                          , (s, s_outer)
                          )
                        , CConj(
                            <nabl2--generate-constraint(nabl2--generate-constraint-default-rule|"default")> (nabl2_source, t, ParamsAndType((s_outer), ty1))
                          , CConj(
                              <nabl2--generate-constraint(nabl2--generate-constraint-default-rule|"default")> (nabl2_source, e, ParamsAndType((s_outer), ty2))
                            , CConj(
                                CCheckRel(
                                  ty2
                                , DefaultRelation()
                                , ty1
                                , Message(
                                    Error()
                                  , Formatted(
                                      [ Text("type mismatch got ")
                                      , Term(ty2)
                                      , Text(" where ")
                                      , Term(ty1)
                                      , Text(" expected")
                                      ]
                                    )
                                  , <nabl2--get-ast-index> e
                                  )
                                )
                              , CConj(
                                  CGDecl(
                                    Occurrence(
                                      Namespace("Var")
                                    , x
                                    , <nabl2--occurrence-index-of> x
                                    )
                                  , s
                                  , <nabl2--get-ast-index> term87
                                  )
                                , CDeclProperty(
                                    Occurrence(
                                      Namespace("Var")
                                    , x
                                    , <nabl2--occurrence-index-of> x
                                    )
                                  , Type()
                                  , ty1
                                  , "!"
                                  , Message(Error(), Default(), <nabl2--get-ast-index> term87)
                                  )
                                )
                              )
                            )
                          )
                        ))

  nabl2--generate-constraint-Dec-rule(|):
    (nabl2_source, term88@VarDecNoType(x, e), args22) -> constraint8
    with(ty := <nabl2--fresh-var(|nabl2_source)> "ty" ; id)
    with(Params(params15@(s, s_outer)) := args22
         <+ fatal-err(
            | <concat-strings> [ "Cannot match expected "
                               , "^ (s, s_outer)"
                               , " with actual "
                               , <nabl2--pp-flat-args> args22
                               , " when matching "
                               , "VarDecNoType(x, e)"
                               , " with "
                               , <pp-NaBL2-Term> term88
                               , "."
                               ]
            ))
    with(if nabl2--is-debug-collection-enabled then
           nabl2--collection-info-msg(
           | <concat-strings> [ "Dec"
                              , " [[ "
                              , <pp-NaBL2-Term> term88
                              , " ^ "
                              , <pp-NaBL2-CTerm> params15
                              , " ]]"
                              ]
           )
         end)
    with(constraint8 := CConj(
                          CAstProperty(
                            <nabl2--get-ast-index> term88
                          , Params()
                          , (s, s_outer)
                          )
                        , CConj(
                            <nabl2--generate-constraint(nabl2--generate-constraint-default-rule|"default")> (nabl2_source, e, ParamsAndType((s_outer), ty))
                          , CConj(
                              CInequal(
                                ty
                              , NIL()
                              , Message(
                                  Error()
                                , Formatted([Text("explicit type expected for variable initialized with nil")])
                                , <nabl2--get-ast-index> term88
                                )
                              )
                            , CConj(
                                CGDecl(
                                  Occurrence(
                                    Namespace("Var")
                                  , x
                                  , <nabl2--occurrence-index-of> x
                                  )
                                , s
                                , <nabl2--get-ast-index> term88
                                )
                              , CDeclProperty(
                                  Occurrence(
                                    Namespace("Var")
                                  , x
                                  , <nabl2--occurrence-index-of> x
                                  )
                                , Type()
                                , ty
                                , "!"
                                , Message(Error(), Default(), <nabl2--get-ast-index> term88)
                                )
                              )
                            )
                          )
                        ))


rules

  nabl2--generate-constraint-default-rule(|):
    (nabl2_source, term89@Var(x), args20) -> constraint6
    with(d := <nabl2--fresh-var(|nabl2_source)> "d"
         ; ty := <nabl2--fresh-var(|nabl2_source)> "ty"
         ; id)
    with(ParamsAndType(params13@(s), type39) := args20
         <+ fatal-err(
            | <concat-strings> [ "Cannot match expected "
                               , "^ (s) : type39"
                               , " with actual "
                               , <nabl2--pp-flat-args> args20
                               , " when matching "
                               , "Var(x)"
                               , " with "
                               , <pp-NaBL2-Term> term89
                               , "."
                               ]
            ))
    with(if nabl2--is-debug-collection-enabled then
           nabl2--collection-info-msg(
           | <concat-strings> [ "default"
                              , " [[ "
                              , <pp-NaBL2-Term> term89
                              , " ^ "
                              , <pp-NaBL2-CTerm> params13
                              , " : "
                              , <pp-NaBL2-objlangterm> type39
                              , " ]]"
                              ]
           )
         end)
    with(constraint6 := CConj(
                          CEqual(
                            type39
                          , ty
                          , Message(Error(), Default(), <nabl2--get-ast-index> term89)
                          )
                        , CConj(
                            CAstProperty(<nabl2--get-ast-index> term89, Type(), type39)
                          , CConj(
                              CAstProperty(
                                <nabl2--get-ast-index> term89
                              , Params()
                              , (s)
                              )
                            , CConj(
                                CGRef(
                                  Occurrence(
                                    Namespace("Var")
                                  , x
                                  , <nabl2--occurrence-index-of> x
                                  )
                                , s
                                , <nabl2--get-ast-index> term89
                                )
                              , CConj(
                                  CResolve(
                                    Occurrence(
                                      Namespace("Var")
                                    , x
                                    , <nabl2--occurrence-index-of> x
                                    )
                                  , d
                                  , Message(Error(), Default(), <nabl2--get-ast-index> term89)
                                  )
                                , CDeclProperty(
                                    d
                                  , Type()
                                  , ty
                                  , ""
                                  , Message(Error(), Default(), <nabl2--get-ast-index> term89)
                                  )
                                )
                              )
                            )
                          )
                        ))


rules

  nabl2--generate-constraint-default-rule(|):
    (nabl2_source, term91@Assign(e1, e2), args19) -> constraint5
    with(ty2 := <nabl2--fresh-var(|nabl2_source)> "ty2"
         ; ty1 := <nabl2--fresh-var(|nabl2_source)> "ty1"
         ; id)
    with(ParamsAndType(params12@(s), type40) := args19
         <+ fatal-err(
            | <concat-strings> [ "Cannot match expected "
                               , "^ (s) : type40"
                               , " with actual "
                               , <nabl2--pp-flat-args> args19
                               , " when matching "
                               , "Assign(e1, e2)"
                               , " with "
                               , <pp-NaBL2-Term> term91
                               , "."
                               ]
            ))
    with(if nabl2--is-debug-collection-enabled then
           nabl2--collection-info-msg(
           | <concat-strings> [ "default"
                              , " [[ "
                              , <pp-NaBL2-Term> term91
                              , " ^ "
                              , <pp-NaBL2-CTerm> params12
                              , " : "
                              , <pp-NaBL2-objlangterm> type40
                              , " ]]"
                              ]
           )
         end)
    with(constraint5 := CConj(
                          CEqual(
                            type40
                          , UNIT()
                          , Message(Error(), Default(), <nabl2--get-ast-index> term91)
                          )
                        , CConj(
                            CAstProperty(<nabl2--get-ast-index> term91, Type(), type40)
                          , CConj(
                              CAstProperty(
                                <nabl2--get-ast-index> term91
                              , Params()
                              , (s)
                              )
                            , CConj(
                                <nabl2--generate-constraint(nabl2--generate-constraint-default-rule|"default")> (nabl2_source, e1, ParamsAndType((s), ty1))
                              , CConj(
                                  <nabl2--generate-constraint(nabl2--generate-constraint-default-rule|"default")> (nabl2_source, e2, ParamsAndType((s), ty2))
                                , CCheckRel(
                                    ty2
                                  , DefaultRelation()
                                  , ty1
                                  , Message(
                                      Error()
                                    , Formatted(
                                        [ Text("type mismatch got ")
                                        , Term(ty2)
                                        , Text(" where ")
                                        , Term(ty1)
                                        , Text(" expected")
                                        ]
                                      )
                                    , <nabl2--get-ast-index> e2
                                    )
                                  )
                                )
                              )
                            )
                          )
                        ))